name: Build
on:
  pull_request:
    paths-ignore:
      - "**.md"
  push:
    paths-ignore:
      - "**.md"

jobs:
  build-nim:
    name: Build Nim
    strategy:
      matrix:
        include:
          - runs-on: ubuntu-latest
            cpu: amd64
            os: linux
            cc: gcc
            packages: "gcc binutils"

          # - runs-on: ubuntu-latest
          #   cpu: i386
          #   os: linux
          #   cc: gcc-i686-linux-gnu
          #   packages: "gcc-i686-linux-gnu binutils-i686-linux-gnu"

          # - runs-on: ubuntu-latest
          #   cpu: arm
          #   os: linux
          #   cc: gcc-arm-linux-gnueabihf
          #   packages: "gcc-arm-linux-gnueabihf binutils-arm-linux-gnueabihf"

          # - runs-on: ubuntu-latest
          #   cpu: aarch64
          #   os: linux
          #   cc: gcc-aarch64-linux-gnu
          #   packages: "gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu"

          # - runs-on: ubuntu-latest
          #   cpu: ppc64le
          #   os: linux
          #   cc: gcc-powerpc64le-linux-gnu
          #   packages: "gcc-powerpc64le-linux-gnu binutils-powerpc64le-linux-gnu"

          # - runs-on: ubuntu-latest
          #   cpu: mips64el
          #   os: linux
          #   cc: gcc-mipsel-linux-gnu
          #   packages: "gcc-mipsel-linux-gnu binutils-mipsel-linux-gnu"

          # - runs-on: macos-latest
          #   cpu: amd64
          #   os: darwin
          #   cc: clang

    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Fetch or build csources
        id: build-csources
        env:
          CC: ${{ matrix.cc }}
        run: |
          set -uex

          csources_version="v0.20.0"
          bin_dir="csources-${{ matrix.os }}-${{ matrix.cpu }}"
          tarball="${bin_dir}.tar.xz"

          echo "::set-output name=csources-version::${csources_version}"
          echo "::set-output name=bin-dir::${bin_dir}"
          echo "::set-output name=tarball::${tarball}"

          curl \
            --fail -L \
            "https://dl.bintray.com/elijahr/nim-csources/${tarball}" \
            -o "$tarball" || true

          if [ ! -f "$tarball" ]
          then
            if [ "${{ matrix.packages }}" != "" ]
            then
              sudo apt-get install ${{ matrix.packages }}
            fi
            git clone \
              -q --depth 1 \
              --branch "$csources_version" \
              https://github.com/nim-lang/csources.git
            cd csources
            rm -rf .git/
            sh build.sh \
              --cpu ${{ matrix.cpu }} \
              --os ${{ matrix.os }}
            mv bin "../${bin_dir}"
            cd -
            rm -rf csources
            tar -cJf "$tarball" "$bin_dir"
            echo "::set-output name=do-upload::true"
          fi

      - name: Upload csources build to Bintray
        if: ${{ steps.build-csources.outputs.do-upload }}
        uses: bpicode/github-action-upload-bintray@master
        with:
          file: ./${{ steps.build-csources.outputs.tarball }}
          api_user: elijahr
          api_key: ${{ secrets.BINTRAY_API_KEY }}
          repository_user: elijahr
          repository: nim-builds
          package: csources
          version: ${{ steps.build-csources.outputs.csources-version }}
          upload_path: ""
          publish: 1
          calculate_metadata: true # Schedule metadata calculation after upload
